###
  //set
 //unique
//sorted
        set<int> s={2,1,3,1,4}; //{1,2,3,4}
        
        for(auto val: s){
            cout<<val<<endl;
        }
  
  //iteterate set      
  for(auto it = s.begin(); it!=s.end(); it++){
      cout<<*it<<endl;
  }
  
  cout<<s.size()<<endl;   //4


#complexity : o(log(n))


  #insert value in set
set<int> s;
s.insert(4);
s.insert(2);
s.insert(3);
s.insert(7);
s.insert(6);
s.insert(2);

//4

int indx = 0;
for(auto val: s){
   if(indx==3){
     cout<<val<<endl;
     break;
     }
   indx++;
   }
   
#erase value in set
s.erase(2);

#
set<int> s;
s.insert(4);
s.insert(2);
s.insert(3);
s.insert(7);
s.insert(6);
s.insert(2);

if(s.find(6) == s.end()) cout<<"NO";
else cout<<"yes";


#
#include <bits/stdc++.h>
using namespace std;
int main(){
    fast
    //set
    //unique
    //sorted
      set<pair<int, int>> st;
      
      st.insert({4, 1});
      st.insert({1, 1});
      st.insert({1, 4});
      st.insert({2, 2});
      st.insert({2, 3});
      
      for(auto it: st){
          cout<<it.first<<" "<<it.second<<endl;
      }
        return 0;
    }






#include <bits/stdc++.h>
#define test int t; cin >> t; while(t--)
#define fast {ios_base::sync_with_stdio(0);cin.tie(0);}
#define ll long long
using namespace std;
int main(){
    fast
        //1 x -> add x to the list
        //2 x  -> remove all occurance of x
        //3 x -> print if x exists
        //4 -> clear
        
      int n;
      cin >> n;
      
      set<int> st;
      
      while(n--){
          int type;
          cin >> type;
          
          if(type==4) st.clear();
          else{
              int x;
              cin >> x;
              if(type==1) st.insert(x);
              else if(type==2) st.erase(x);
              else{
                  if(st.count(x)) cout<<"Yes"<<endl;
                  else cout<<"No"<<endl;
              }
          }
      }   
      return 0;
    }






















  
